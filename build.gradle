plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72' apply false
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

ext {
    kotlinVersion = '1.3.72'
    beta = System.getenv("BETA") == "true"
}

group 'dev.zerite.mclib'
version = beta ? getGitHash() : '0.1.0-SNAPSHOT'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    group rootProject.group
    version rootProject.version

    sourceCompatibility = targetCompatibility = '1.8'
    compileJava.options.encoding 'UTF-8'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
        testImplementation 'junit:junit:4.12'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set("sources")
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/Zerite/MCLib")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
                artifact sourceJar

                pom {
                    name = beta ? "${project.name}-beta" : project.name
                    url = "https://zerite.dev"
                }
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
